<style lang='less'>
  .tasklist-view {
    height: 450px;
  }
  .vanbutton {
    width: 30%;
  }
</style>
<template>
  <view style="position: fixed; height: 100%; width: 100%;">

    <!-- 导航栏 -->
    <mynavbar title="搜索" lefttext="首页" leftarrow="true"></mynavbar>

    <!-- 搜索框 -->
    <van-search
      class="search"
      value="{{ keyword }}"
      placeholder="搜索"
      shape="round"
      show-action
      bind:search="onSearch"
      bind:cancel="onCancel"
      bind:change="onChange"
      focus
    ></van-search>
    <view class="tasklistboard" wx:if="{{issearch}}">
      <!-- 搜索结果 -->
      <van-cell title="{{resultMessage}}" label="{{keyword}}" />
      <scroll-view
        id="scroll-wrap"
        class="tasklist-view"
        scroll-y="true"
        lower-threshold="100"
      >
        <view
          id="inner-wrap"
          style="width: 100%;"
        >
          <tasklist :tasks.sync="tasks"></tasklist>
        </view>
      </scroll-view>
    </view>
    <view wx:else>
      <!-- 搜索历史 -->
      <van-cell-group title="搜索历史">
        <view wx:for="{{ search_histories }}" wx:key="idx" wx:for-index="idx" wx:for-item="itemName">
          <van-cell id="{{ idx }}" title="{{ itemName }}" clickable bind:click="onClickHistory"></van-cell>
        </view>

      </van-cell-group>
    </view>

  </view>
</template>
<script>
  import wepy from 'wepy'
  import MyNavBar from '../components/mynavbar'
  import TaskList from '../components/tasklist'
  import JsonToObject from '../data/JsonToObject'

  export default class SearchResult extends wepy.page {
    components = {
      tasklist: TaskList,
      mynavbar: MyNavBar
    }

    data = {
      keyword: "",
      issearch: false,
      tasks: [],
      search_histories: [],
      history: "",
      dataIndex: 0,
      resultMessage: ""
    }

    methods = {
      onChange (e) {
          this.keyword = e.detail;
      },

      onSearch () {
        this.search();
      },

      onCancel (e) {
        this.issearch = false;
      },

      onClickHistory (e) {
        this.keyword = this.search_histories[e.target.id];
        this.search();
      }
    }

    onLoad () {
      this.search_histories = wx.getStorageSync('searchHistory');
    }



    search () {
      // 考虑了无本地缓存的情况
      if (this.search_histories == "") {
        this.search_histories = [];
      }

      if (this.keyword == '') {
        // 搜索框为空时不做任何事情
      } else {
        // 搜索框不为空时搜索
        this.issearch = true;

        // 先清空任务列表
        this.tasks = [];
        this.resultMessage = "搜索到" + this.tasks.length + "条结果";
        this.$apply();

        // 只保存6个最近记录
        var _keyword = this.keyword;
        if (this.search_histories.length <= 0) {

        } else if (this.search_histories.length < 6) {
          var index = this.search_histories.findIndex(function (element) {
            return element == _keyword;
          });
          if (index >= 0) {
            this.search_histories.splice(index, 1);
          }
        } else {
          var index = this.search_histories.findIndex(function (element) {
            return element == _keyword;
          });
          if (index < 0) {
            this.search_histories.shift();
          } else {
            this.search_histories.splice(index, 1);
          }
        }
        this.search_histories.unshift(this.keyword);
        console.log(this.search_histories);

        // 将历史搜索记录保存到本地缓存
        wx.setStorageSync(
          'searchHistory',
          this.search_histories
        );

        var that = this;

        //定义函数
        function searchByType (search_type, field_data) {
          wx.request({
            url: that.$parent.globalData.ip + 'search/' + search_type,
            method: 'POST',
            data: field_data,
            header: {
              'content-type': 'application/json'
            },
            success: (res) => {
              console.log(res.data);
              if (res.data.hasOwnProperty('task_id')) {
                var tasks_id = res.data.task_id;
                for (var i = 0; i < tasks_id.length; i++) {
                  wx.request({
                    url: that.$parent.globalData.ip + 'search/task_id',
                    method: 'POST',
                    data: {
                      'task_id': tasks_id[i]
                    },
                    success: (res2) => {
                      console.log(res2)
                      if (res2.data.hasOwnProperty('id')) {
                        var id = res2.data.id;
                        var index = that.tasks.findIndex(function (element) {
                          return id == element;
                        });
                        if (index >= 0) {
                          console.log('reduced task!');
                          return;
                        }
                        var imageurl;
                        if (res2.data.images.length == 0) {
                          imageurl = that.$parent.globalData.ip + 'task/makemoney.jpeg'
                        }
                        else {
                          imageurl = JsonToObject.JsonToUrl(res2.data.images, that.$parent.globalData.ip)[0]
                        }
                        var task_item = {
                          'id': res2.data.id,
                          'itemid': res2.data.id,
                          'title': res2.data.title,
                          'detail': res2.data.detail,
                          'type': res2.data.type,
                          'images': imageurl
                        };
                        that.tasks.push(task_item);
                        that.resultMessage = "搜索到" + that.tasks.length + "条结果";
                        that.$apply();
                        console.log(res2);
                        console.log('get task success');
                      } else {
                        console.log('get task failed');
                      }

                    },
                    fail: (res2) => {
                      console.log('get task failed');
                    }
                  });
                }
                console.log('search success!');
              } else {
                console.log('search failed!');
              }
            },
            fail: (res) => {
              console.log(res.data)

            },
            complete: (res) => {

            }
          });
        }

        var fieldData = {};
        fieldData = {
          'key_word': this.keyword
        };
        searchByType('title_key_word', fieldData);
        searchByType('detail_key_word', fieldData);
        fieldData = {
          'sponsor': this.keyword
        };
        searchByType('sponsor', fieldData);

      }
    }


  }
</script>
