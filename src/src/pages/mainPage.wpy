<template>
  <view style="position: fixed; width: 100%; height: 100%;">
    <!-- 标题栏 -->
    <mynavbar title="首页" lefttext="" leftarrow="false"></mynavbar>
    <!-- 搜索栏 -->
    <van-search
      class="search"
      value="{{search_keyword}}"
      placeholder="搜索"
      shape="round"
      bind:search="onSearch"
      bind:cancel="onCancel"
    >
      <view slot="label" @tap="selectLoc">
        <van-icon name="location-o" size="15px"></van-icon>
        <text style="font-size: small;">{{location.city}}</text>
      </view>
    </van-search>
    <!-- 页面主体 -->
    <view class="mainBody">
      <!-- 分类按钮 -->
      <view class="taskType">
        <view class="taskTypeButtonView">
          <CategoryBtnOnline icon="graphic" text="线上任务"></CategoryBtnOnline>
        </view>
        <view class="taskTypeButtonView">
          <CategoryBtnOffline icon="shop" text="线下任务"></CategoryBtnOffline>
        </view>
      </view>
      <!-- 任务列表 -->
      <view class="tasklistboard">
        <myMainPageTitle></myMainPageTitle>
        <scroll-view scroll-y="true" style="height: 90%;">
          <repeat for="{{tasks}}" item="item">
            <tasklist :tasks="item"></tasklist>
          </repeat>
        </scroll-view>
      </view>
      <!--  底部导航栏 -->
      <mytabbar></mytabbar>
    </view>
  </view>
  <van-popup
    show="{{showCitySelector}}"
    position="bottom"
  >
    <van-area
      area-list="{{areaList}}"
      @confirm="locConfirm"
      @cancel="locCancel"
    ></van-area>
  </van-popup>
</template>

<script>
  import wepy from 'wepy'
  import TaskList from '../components/tasklist'
  import MyTabbar from '../components/mytabbar'
  import AreaList from '../utility/area'
  import TasksData from '../data/TempTaskData'
  import MyNavBar from '../components/mynavbar'
  import MyMainPageTitle from '../components/myMainPageTitle'
  import MyMainPageCategoryBtn from '../components/myMainPageCategoryBtn'

  export default class MainPage extends wepy.page {
    config = {
      
    }
    components = {
      tasklist: TaskList,
      mytabbar: MyTabbar,
      mynavbar: MyNavBar,
      myMainPageTitle: MyMainPageTitle,
      CategoryBtnOnline: MyMainPageCategoryBtn,
      CategoryBtnOffline: MyMainPageCategoryBtn
    }
    data = {
      tasks: [],
      location: {},
      showCitySelector: false,
      areaList: {},
      location: {
        province: "获取定位",
        city: "获取定位",
        county: "获取定位"
      }
    }
    computed = {

    }
    methods = {
      onSearch(e) {
        console.log(e.detail);
        console.log('search');
        var data = {
          value: e.detail,
          location: this.location
        }
        console.log(data)
      },
      onCancel(e) {
        console.log(e);
        console.log('cancel');
      },
      onSearchChange(e) {
        console.log(e);
        console.log("change");
      },
      selectLoc() {
        this.showCitySelector = true;
      },
      locConfirm(e) {
        var value = e.detail.values;
        this.location.province = value[0].name;
        this.location.city = value[1].name;
        this.location.county = value[2].name;
        this.showCitySelector = false;
      },
      locCancel() {
        this.showCitySelector = false;
      }
    }
    events = {

    }
    onLoad() {
      var _this = this
      this.tasks = TasksData.data;
      this.areaList = AreaList;
      wepy.getLocation({
        type: 'gcj02',
        success: function(address) {
          var QQMapWX = require('../qqmap-sdk/qqmap-wx-jssdk.js')
          var qqmapsdk = new QQMapWX({
            key: 'Z7ZBZ-INFRD-J2H47-PEF53-KYYYS-GVFEM'
          })
          var mylocation = {
            latitude: address.latitude,
            longitude: address.longitude
          }
          qqmapsdk.reverseGeocoder({
            location: mylocation,
            success: function(res) {
              res = res.result.address_component
              _this.location.province = res.province
              _this.location.city = res.city
              _this.location.county = res.district
              _this.$apply()
            }
          })
        }
      });
    }
    onShow() {
      this.$broadcast('changeActive', "0");
    }
  }
</script>
<style lang="less">
  .mainBody {
    height: 100%;
    width: 100%;
  }
  .taskType {
    width: 100%;
    height: 10%;
    display: flex;
    flex-direction: row;
  }
  .taskTypeButtonView {
    height: 100%;
    width: 50%;
  }
  .taskTypeButton {
    width: 100%;
    height: 200px;
    display: flex;
    justify-content: center;
    align-item: center;
  }
  .tasklistboard {
    width: 100%;
    height: 66.8%;
  }
  .taskboard {
    width: 90%;
    height: 5%;
    text-align: left;
    margin-top: 2.5%;
    margin-left: 2%;
    font-size: small; 
  }
  .tabbar {
    height: 10%;
  }
</style>
