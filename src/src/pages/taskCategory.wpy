<style lang="less">
  ::-webkit-scrollbar{
    width: 0;
    height: 0;
    color: transparent;
  }
</style>
<template>
  <view style="height: 100%; width: 100%; position: fixed;">
    <mynavbar lefttext="返回" leftarrow="true"></mynavbar>
    <van-tabs active="{{active}}" bind:change="onChange">
      <repeat for="{{category.list}}" item="item">
        <van-tab title="{{item}}">
          <view></view>
        </van-tab>
      </repeat>
    </van-tabs>
    <scroll-view scroll-y="true" style="height: 82%; margin-top: 10rpx;">
      <tasklist :tasks.sync="tasks"></tasklist>
      <view style="width: 100%; display: flex; justify-content: center; align-items: center; margin-top: 10rpx;">
        <van-loading type="spinner" size="20px"></van-loading>
      </view>
    </scroll-view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import TaskCategoryList from '../data/TaskCategory'
  import TaskList from '../components/tasklist'
  import MyNavBar from '../components/mynavbar'
  import JsonToObject from '../data/JsonToObject'

  export default class TaskCategory extends wepy.page {
    config = {

    }
    components = {
      tasklist: TaskList,
      mynavbar: MyNavBar
    }
    data = {
      title: "线上任务",
      type: 0,
      category: {},
      active: 0,
      tasks: [],
      batch_size: 10,
      dataIndex: 0
    }
    methods = {
      onChange(e) {
        console.log(e.detail)
        console.log("next is the function to get data back from server")
      }
    }
    onLoad(options) {
      this.type = options.type
      if (options.type == 0) {
        this.category.list = TaskCategoryList.online
      }
      else {
        this.category.list = TaskCategoryList.offline
      }
      wx.request({
        url: this.$parent.globalData.ip + 'recommend',
        method: 'POST',
        header: {
          'content-type': 'application/json'
        },
        data: {
          batch_size: this.batch_size
        },
        success: (res) => {
          console.log(res.data)
          for (; this.dataIndex < res.data.task_number; this.dataIndex++) {
            this.tasks.push(res.data.task_info[this.dataIndex])
            //添加第一张图片
            this.tasks[this.dataIndex].images = JsonToObject.JsonToUrl(this.tasks[this.dataIndex].images, this.$parent.globalData.ip);
            if (this.tasks[this.dataIndex].images.length == 0) {
              this.tasks[this.dataIndex].images = this.$parent.globalData.ip + 'task/makemoney.jpeg';
            }
            else {
              this.tasks[this.dataIndex].images = this.tasks[this.dataIndex].images[0];
            }
            //.............
            this.tasks[this.dataIndex].itemid = "task_item_id" + this.dataIndex
          }
        }
      })
    }
    onShow() {
      if (this.type == 0) {
        this.$broadcast("setTitle", '线上任务')
      }
      else {
        this.$broadcast("setTitle", '线下任务')
      }
    }
  }
</script>
